package com.horvat.gui.dialogs;

import com.horvat.dl.helpers.ToStringUtils;
import com.horvat.gui.dialogs.option.base.OptionDialog;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.math.BigDecimal;
import java.util.Map;

public class DisplaySimpleDataDialog extends OptionDialog<Object> {
    private JPanel contentPane;
    private JButton btnOK;
    private JPanel pnlContent;

    public DisplaySimpleDataDialog(Window owner, String title, int width, int height, Map<String, Object> data) {
        super(owner, title, width, height);
        setContentPane(contentPane);
        getRootPane().setDefaultButton(btnOK);

        btnOK.addActionListener(e -> onOK());

        // call onCancel() when cross is clicked
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                onCancel();
            }
        });

        // call onCancel() on ESCAPE
        contentPane.registerKeyboardAction(
                e -> onCancel(),
                KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0),
                JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT
        );

        initControls(data);
    }

    private void initControls(Map<String, Object> data) {
        GridBagConstraints constraints = new GridBagConstraints();
        constraints.weightx = 0.5;
        constraints.weighty = 1;

        constraints.gridy = 0;

        for (String key : data.keySet()) {
            Object value = data.get(key);

            constraints.gridx = 0;

            pnlContent.add(new JLabel(key), constraints);

            constraints.gridx = 1;

            String lblValue;

            if (value instanceof Boolean)
                lblValue = (Boolean) value ? "Yes" : "No";
            else if (value instanceof BigDecimal)
                lblValue = ToStringUtils.moneyFormat((BigDecimal) value);
            else
                lblValue = value.toString();

            pnlContent.add(new JLabel(lblValue), constraints);

            constraints.gridy++;
        }
    }

    private void onOK() {
        close();
    }

    private void onCancel() {
        close();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new BorderLayout(0, 0));
        contentPane.setPreferredSize(new Dimension(200, 200));
        final JScrollPane scrollPane1 = new JScrollPane();
        scrollPane1.setHorizontalScrollBarPolicy(31);
        scrollPane1.setVerticalScrollBarPolicy(20);
        contentPane.add(scrollPane1, BorderLayout.CENTER);
        pnlContent = new JPanel();
        pnlContent.setLayout(new GridBagLayout());
        scrollPane1.setViewportView(pnlContent);
        btnOK = new JButton();
        btnOK.setText("OK");
        contentPane.add(btnOK, BorderLayout.SOUTH);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
