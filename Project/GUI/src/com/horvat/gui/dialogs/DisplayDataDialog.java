package com.horvat.gui.dialogs;

import com.horvat.dl.entities.IDisplayable;
import com.horvat.gui.dialogs.option.base.OptionDialog;
import com.horvat.gui.dialogs.report.DisplaySimpleDataDialog;
import com.horvat.gui.entities.ButtonCellRenderer;
import com.horvat.gui.entities.CustomTableModel;
import javafx.util.Pair;

import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableModel;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

public class DisplayDataDialog<T extends IDisplayable> extends OptionDialog<Object> {
    private JPanel contentPane;
    private JTable table;
    private JPanel pnlButtons;

    public DisplayDataDialog(Window owner, String title, int width, int height) {
        super(owner, title, width, height);
        setContentPane(contentPane);
    }

    public DisplayDataDialog(Window owner, String title, int width, int height, List<T> data) {
        this(owner, title, width, height);
        setTableData(data);
        table.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                TableModel model = table.getModel();

                if (!(model instanceof CustomTableModel))
                    return;

                Pair<String, Object> cellData = ((CustomTableModel<T>) model).getCellContent(
                        table.getSelectedRow(),
                        table.getSelectedColumn()
                );

                if (cellData != null) {
                    if (cellData.getValue() instanceof Map) {
                        DisplaySimpleDataDialog dialog = new DisplaySimpleDataDialog(
                                owner, cellData.getKey(), 400, 500, (Map<String, Object>) cellData.getValue()
                        );
                        dialog.showDialog();
                    } else if (cellData.getValue() instanceof List) {
                        DisplayDataDialog dialog = new DisplayDataDialog(
                                owner, cellData.getKey(), width, height, (List) cellData.getValue()
                        );
                        dialog.showDialog();
                    }
                }
            }
        });
    }

    public void setTableData(List<T> data) {
        if (data == null || data.size() == 0)
            return;

        List<Integer> complexColumns = new ArrayList<>();
        table.setModel(new CustomTableModel<>(data, complexColumns));

        for (Integer column : complexColumns)
            table.getColumnModel().getColumn(column).setCellRenderer(new ButtonCellRenderer("View"));
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new BorderLayout(0, 0));
        final JScrollPane scrollPane1 = new JScrollPane();
        scrollPane1.setHorizontalScrollBarPolicy(31);
        contentPane.add(scrollPane1, BorderLayout.CENTER);
        table = new JTable();
        table.setAutoResizeMode(4);
        table.setIntercellSpacing(new Dimension(1, 1));
        table.setRowHeight(25);
        table.setRowMargin(1);
        scrollPane1.setViewportView(table);
        pnlButtons = new JPanel();
        pnlButtons.setLayout(new GridBagLayout());
        contentPane.add(pnlButtons, BorderLayout.SOUTH);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
